use std

pkg pg =
	type rules = struct
		infile	: byte[:]	/* input file we read */
		start	: byte[:]	/* start production */
		pkgname	: byte[:]	/* the package name to output */
		uses	: byte[:][:]
		myr	: byte[:]
		rules	: rule#[:]
		toks	: tok#[:]
	;;

	type dfa = struct
		initial	: std.size
		trans	: (int, int)[:][:]
		accept	: std.bitset#	/* accept, tok id pairs */
	;;

	type nfatrans = union
		`Eps std.size	/* epsilon transition */
		`Byte (std.size, byte)	/* single byte */
		`Range (std.size, byte, byte)	/* byte range; compressed list of bytes */
	;;

	type nfa = struct
		/* state 0 is initial, state 1 is our accept state */
		states	: nfatrans[:][:]
	;;

	type rule = struct
		id	: int
		name	: byte[:]
		terms	: byte[:][:]
		action	: byte[:]
	;;

	type tok = struct
		id	: int
		isregex	: bool
		name	: byte[:]
		pat	: byte[:]
	;;
;;
