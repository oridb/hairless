use std
use bio

use "dfa"
use "slr"
use "nfa"
use "parse"
use "types"
use "write"

const main = {args
	var tab, dfa, nfa
	var path, out
	var rules
	var cmd

	cmd = std.optparse(args, &[
		.argdesc="inputs...", 
		.minargs=1,
		.opts = [[.opt='d', .desc="turn on debugging"]][:]
	])

	for o in cmd.opts
		match o
		| ('d', ""):	pg.opt_dbg = true
		| _:	std.fatal("unreachable")
		;;
	;;

	for f in cmd.args
		/* read the input file */
		rules = pg.parse(f)

		/* generate the various tables */
		nfa = pg.mknfa(rules)
		dfa = pg.mkdfa(nfa)
		tab = pg.genslrtab(rules)

		/* and output */
		path = swapsuffix(f, ".hl", ".myr")
		out = std.try(bio.create(path, bio.Wr, 0o666))
		pg.writehdr(out, rules)
		pg.writedfa(out, rules, dfa)
		pg.writeslr(out, rules, tab)
		bio.close(out)
		std.slfree(path)
	;;
}

const swapsuffix = {str, suff, repl
	if std.hassuffix(str, suff)
		-> std.strcat(str[:str.len - suff.len], repl)
	else
		-> std.strcat(str, repl)
	;;
}
